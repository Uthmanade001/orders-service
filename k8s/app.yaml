apiVersion: v1
kind: Namespace
metadata:
  name: orders
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders-api
  namespace: orders
spec:
  replicas: 2
  selector:
    matchLabels:
      app: orders-api
  template:
    metadata:
      labels:
        app: orders-api
    spec:
      containers:
        - name: app
          image: orders-service:local  # we'll swap to ECR on AWS
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
          readinessProbe:
            httpGet: { path: /health, port: 3000 }
            initialDelaySeconds: 3
            periodSeconds: 5
          livenessProbe:
            httpGet: { path: /health, port: 3000 }
            initialDelaySeconds: 10
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: orders-api
  namespace: orders
spec:
  type: NodePort   # Minikube-friendly; we'll use LoadBalancer on EKS
  selector:
    app: orders-api
  ports:
    - port: 80
      targetPort: 3000
